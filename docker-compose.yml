# Docker compose
# Funciona como um orquestrador de containers
# Definir quais serviços vão rodar, quais as dependências e etc

version: "3.7"

services:
  database:
    image: postgres # utilizando a imagem do PG
    container_name: 'database'
    restart: always # Política para reiniciar o container
    ports:
      - 5432:5432 # Porta padrão do PG
    environment: # Variáveis disponíveis na imagem do PG
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=rental_bucket
      - POSTGRES_DB=rental_bucket
    volumes:
      - pgdata:/data/postgres # Onde ficam as informações do DB
    
  app: # nome do serviço
    build: . # build no serviço declarado no dockerFile
    container_name: api
    ports:
      - 3333:3333 # Mapeando portas Máquina -> container
    volumes:
      - .:/usr/app # Diretório de trabalho
    links:
      - database
    depends_on: 
      - database

volumes: 
  pgdata: 
    driver: local

# Para executa os serviços
# docker-compose -p rental-bucket up --build
# Para rodar as migrations: npm run typeorm migration:run